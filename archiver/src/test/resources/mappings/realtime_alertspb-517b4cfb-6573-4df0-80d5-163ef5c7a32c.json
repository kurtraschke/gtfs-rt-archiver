{
  "id" : "517b4cfb-6573-4df0-80d5-163ef5c7a32c",
  "name" : "realtime_alertspb",
  "request" : {
    "url" : "/realtime/Alerts.pb",
    "method" : "GET"
  },
  "response" : {
    "status" : 200,
    "base64Body" : "",
    "headers" : {
      "Content-Type" : "application/x-protobuf",
      "Date" : "Mon, 22 May 2023 23:40:26 GMT",
      "x-amzn-RequestId" : "78d31e82-d8b4-43f5-a935-80844bdfd2f9",
      "Last-Modified" : "Mon, 22 May 2023 23:39:39 GMT",
      "x-amz-server-side-encryption" : "AES256",
      "x-amz-meta-title" : "gtfsrt_alerts_generator",
      "x-amzn-Remapped-Content-Length" : "51329",
      "x-amz-apigw-id" : "FWSInF1gIAMF1pQ=",
      "x-amzn-Remapped-Server" : "AmazonS3",
      "X-Amzn-Trace-Id" : "Root=1-646bfd6a-4645194e7868243d16e92ddf",
      "Accept-Ranges" : "bytes",
      "x-amzn-Remapped-Date" : "Mon, 22 May 2023 23:40:27 GMT",
      "ETag" : "\"a8261f99413fdf9f59a20ff917247e7c\"",
      "X-Cache" : "Miss from cloudfront",
      "Via" : "1.1 e887b311f5a4e2b9f32ce96feeb041ca.cloudfront.net (CloudFront)",
      "X-Amz-Cf-Pop" : "PHL51-P1",
      "X-Amz-Cf-Id" : "19S6DBHQP4K20Hltz5Z32apUaU-L9iXGehS9vnNt4vb3HYPCE6vhDw=="
    }
  },
  "uuid" : "517b4cfb-6573-4df0-80d5-163ef5c7a32c",
  "persistent" : true,
  "insertionIndex" : 3
}